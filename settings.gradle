pluginManagement {
    /**
     * The pluginManagement {repositories {...}} block configures the
     * repositories Gradle uses to search or download the Gradle plugins and
     * their transitive dependencies. Gradle pre-configures support for remote
     * repositories such as JCenter, Maven Central, and Ivy. You can also use
     * local repositories or define your own remote repositories. The code below
     * defines the Gradle Plugin Portal, Google's Maven repository,
     * and the Maven Central Repository as the repositories Gradle should use to look for its dependencies.
     */

    repositories {
        google()
        jcenter()
        mavenCentral()
        gradlePluginPortal()
        resolutionStrategy {
            eachPlugin {
                // Use `resolutionStrategy` to resolve plugins that doesn't use Plugin Marker Artifact
                if (requested.id.id == 'androidx.navigation.safeargs') {
                    useModule('androidx.navigation:navigation-safe-args-gradle-plugin:2.5.1')
                }
            }
        }
        maven { url 'https://jitpack.io' }
    }
}
dependencyResolutionManagement {
    /**
     * The dependencyResolutionManagement { repositories {...}}* block is where you configure the repositories and dependencies used by
     * all modules in your project, such as libraries that you are using to
     * create your application. However, you should configure module-specific
     * dependencies in each module-level build.gradle file. For new projects,
     * Android Studio includes Google's Maven repository
     * and the Maven Central Repository by
     * default, but it does not configure any dependencies (unless you select a
     * template that requires some).
     */

    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
}
rootProject.name = "Task"
include ':app'
